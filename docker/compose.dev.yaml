#
# Run the docker compose command from the project's root folder to build / start.
#
# I.e:
#    cd __project_root_dir
#    docker compose --env-file .env -f docker/compose.dev.yaml --project-directory docker up --build
#

version: '3.9'
services:
    db:
        extends:
            file: compose.yaml
            service: db

    jboss:
        extends:
            file: compose.yaml
            service: jboss
        depends_on:
            - db
        ports:
            - 8080:8080

    app:
        build:
            context: ../
            dockerfile: Dockerfile
        image: app-image
        volumes:
            - ../target/biobank-0.0.1-SNAPSHOT.jar:/app.jar
        # develop:
        #     watch:
        #         - action: sync+restart
        #           path: ../target/biobank-0.0.1-SNAPSHOT.jar
        #           target: /app.jar
        command: sh -c "java -jar /app.jar"
        working_dir: /app
        ports:
            - 9000:9000
            - 35729:35729
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_NAME=$DB_NAME
            - DB_USER=$DB_USER
            - DB_PASSWORD=$DB_PASSWORD

    frontend:
        image: node:18-alpine
        user: '${uid}:${gid}'
        working_dir: '/opt/biobank/frontend'
        volumes:
            - ../frontend:/opt/biobank/frontend
        command: sh -c "npm install && npm run dev"
        environment:
            - BACKEND_SERVER=http://host.docker.internal:9000
        ports:
            - 3000:3000
        restart: unless-stopped
        extra_hosts:
            - 'host.docker.internal:host-gateway'
